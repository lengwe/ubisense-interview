{"version":3,"sources":["components/TopBar/TopBar.js","utils/useCountdown.js","components/ProgressBar/ProgressBar.js","components/EngineCard/CurrentProductCard.js","utils/timeConverter.js","components/EngineCard/NoProductCard.js","components/EngineCard/EngineCard.js","pages/DashboardScreen/api/dashboardApi.js","pages/DashboardScreen/api/mockData.js","pages/DashboardScreen/DashboardScreen.js","App.js","reportWebVitals.js","index.js","components/EngineCard/EngineCard.module.css","components/ProgressBar/ProgressBar.module.css","components/TopBar/TopBar.module.css","pages/DashboardScreen/DashboardScreen.module.css"],"names":["TopBar","_ref","children","react_default","a","createElement","className","styles","topBar","root","getReturnValues","timeElapsed","remainingTime","hours","Math","floor","minutes","seconds","ProgressBar","totalTime","entryTime","_useState","useState","_useState2","Object","slicedToArray","progressBarStatus","setProgressBarStatus","_useCountdown","initialTimeElapsed","Date","getTime","initialRemainingTime","setTimeElapsed","_useState3","_useState4","setRemainingTime","useEffect","setInterval","useCountdown","_useCountdown2","checkStatus","percentage","elapsedContainer","infoTitle","Warning_default","color","sx","marginLeft","value","max","CurrentProductCard","imageURL","serialNumber","model","cycleTime","cardContent","imageContainer","src","Grid","container","engineInfo","item","xs","infoContent","toLocaleTimeString","hour","minute","hour12","components_ProgressBar_ProgressBar","NoProductCard","noProductCardContent","EngineCard","id","name","card","cardContainer","cardTitle","EngineCard_CurrentProductCard","EngineCard_NoProductCard","dashboardApi","initialiseEngines","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","axios","get","stop","apply","this","arguments","initialiseWorkStations","_ref2","_callee2","_context2","now","mockData","image","DashboardScreen","isLoading","setIsLoading","isError","setIsError","_useState5","_useState6","engineData","setEngineData","useDashboadApi","Promise","all","then","engines","data","workStations","mapEngineData","catch","e","console","warn","concat","_step","engineMetadata","_iterator","_createForOfIteratorHelper","_loop","workStation","currentProduct","found","find","engine","cycleTimeHrs","log","toConsumableArray","s","n","done","err","f","progressContainer","CircularProgress","cardsContainer","map","element","index","components_EngineCard_EngineCard","key","App","components_TopBar_TopBar","pages_DashboardScreen_DashboardScreen","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById","module","exports","engineInfoRow","warning","critical"],"mappings":"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","file":"static/js/main.c74a4d64.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./TopBar.module.css\";\n\nconst TopBar = ({ children }) => {\n  return (\n    <div>\n      <div className={styles.topBar}>\n        <h1>Work Stations</h1>\n      </div>\n      <div className={styles.root}>{children}</div>\n    </div>\n  );\n};\n\nexport default TopBar;\n","import { useEffect, useState } from \"react\";\n\nconst useCountdown = (totalTime, entryTime) => {\n  const initialTimeElapsed = new Date().getTime() - entryTime;\n  const initialRemainingTime = totalTime - timeElapsed;\n\n  const [timeElapsed, setTimeElapsed] = useState(initialTimeElapsed);\n  const [remainingTime, setRemainingTime] = useState(initialRemainingTime);\n\n  useEffect(() => {\n    setInterval(() => {\n      setTimeElapsed(new Date().getTime() - entryTime);\n      setRemainingTime(totalTime - (new Date().getTime() - entryTime));\n    }, 1000);\n  }, []);\n\n  return getReturnValues(timeElapsed, remainingTime);\n};\n\nconst getReturnValues = (timeElapsed, remainingTime) => {\n  // calculate time left\n  let hours = Math.floor((remainingTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  let minutes = Math.floor((remainingTime % (1000 * 60 * 60)) / (1000 * 60));\n  let seconds = Math.floor((remainingTime % (1000 * 60)) / 1000);\n\n  if (remainingTime <= 0) {\n    hours = 0;\n    minutes = 0;\n    seconds = 0;\n  }\n\n  return [timeElapsed, hours, minutes, seconds];\n};\n\nexport { useCountdown };\n","import React, { useEffect, useState } from \"react\";\nimport WarningIcon from \"@mui/icons-material/Warning\";\nimport styles from \"./ProgressBar.module.css\";\nimport { useCountdown } from \"../../utils/useCountdown\";\n\nconst ProgressBar = ({ totalTime, entryTime }) => {\n  const [progressBarStatus, setProgressBarStatus] = useState(\"\");\n  const [timeElapsed, hours, minutes, seconds] = useCountdown(totalTime, entryTime);\n\n  useEffect(() => {\n    checkStatus();\n  }, [timeElapsed]);\n\n  const checkStatus = () => {\n    const percentage = timeElapsed / totalTime;\n    if (percentage >= 0.6 && percentage < 0.8) {\n      setProgressBarStatus(\"warning\");\n    } else if (percentage > 0.8) {\n      setProgressBarStatus(\"critical\");\n    }\n  };\n\n  return (\n    <div>\n      <div className={styles.elapsedContainer}>\n        <span className={styles.infoTitle}>Time Elapsed</span>\n        {progressBarStatus && (\n          <WarningIcon color={progressBarStatus == \"critical\" ? \"error\" : \"warning\"} sx={{ marginLeft: \"10px\" }} />\n        )}\n      </div>\n      <progress className={progressBarStatus && styles[progressBarStatus]} value={timeElapsed} max={totalTime} />\n      {progressBarStatus && (\n        <span className={styles.infoTitle}>\n          Remaining Time is: {hours}hr {minutes}min {seconds}s\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default ProgressBar;\n","import React from \"react\";\nimport Grid from \"@mui/material/Grid\";\nimport styles from \"./EngineCard.module.css\";\nimport { ProgressBar } from \"../ProgressBar\";\nimport { timeConverter } from \"../../utils/timeConverter\";\n\nconst CurrentProductCard = ({ imageURL, serialNumber, model, entryTime, cycleTime }) => {\n  return (\n    <div className={styles.cardContent}>\n      <div className={styles.imageContainer}>\n        <img src={imageURL} />\n      </div>\n      <Grid container className={styles.engineInfo}>\n        <Grid item xs={6}>\n          <span className={styles.infoTitle}>Serial Number</span>\n          <br />\n          <span className={styles.infoContent}>{serialNumber}</span>\n        </Grid>\n        <Grid item xs={6}>\n          <span className={styles.infoTitle}>Model</span>\n          <br />\n          <span className={styles.infoContent}>{model}</span>\n        </Grid>\n        <Grid item xs={6}>\n          <span className={styles.infoTitle}>Entry Time</span>\n          <br />\n          <span className={styles.infoContent}>{timeConverter(entryTime)}</span>\n        </Grid>\n        <Grid item xs={6}>\n          <span className={styles.infoTitle}>Cycle Time</span>\n          <br />\n          <span className={styles.infoContent}>{cycleTime} hr</span>\n        </Grid>\n        <Grid item xs={12}>\n          <ProgressBar entryTime={entryTime} totalTime={cycleTime * 3600 * 1000} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default CurrentProductCard;\n","export const timeConverter = (timestamp) => {\n  const newTimeFormat = new Date(timestamp).toLocaleTimeString(\"en-US\", {\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    hour12: true,\n  });\n  return newTimeFormat;\n};\n","import React from \"react\";\nimport styles from \"./EngineCard.module.css\";\n\nconst NoProductCard = () => {\n  return (\n    <div className={styles.cardContent}>\n      <div className={styles.noProductCardContent}>No Product</div>\n    </div>\n  );\n};\n\nexport default NoProductCard;\n","import React from \"react\";\nimport styles from \"./EngineCard.module.css\";\nimport CurrentProductCard from \"./CurrentProductCard\";\nimport NoProductCard from \"./NoProductCard\";\n\nconst EngineCard = ({ id, name, imageURL, serialNumber, model, entryTime, cycleTime }) => {\n  return (\n    <div className={styles.card}>\n      <div className={styles.cardContainer}>\n        <div className={styles.cardTitle}>\n          <h3>{name}</h3>\n        </div>\n        {id != null ? (\n          <CurrentProductCard\n            imageURL={imageURL}\n            model={model}\n            serialNumber={serialNumber}\n            entryTime={entryTime}\n            cycleTime={cycleTime}\n          />\n        ) : (\n          <NoProductCard />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default EngineCard;\n","import axios from \"axios\";\n\nexport default () => {\n  const initialiseEngines = async () => axios.get(\"https://ubi-engines.azurewebsites.net/api/orchestrators/Engines\");\n\n  const initialiseWorkStations = async () =>\n    axios.get(\"https://ubi-interview.azurewebsites.net/api/orchestrators/workstations\");\n\n  return {\n    initialiseEngines,\n    initialiseWorkStations,\n  };\n};\n","const now = new Date().getTime();\n\nexport const mockData = [\n  {\n    id: \"60467703c7e7ca6bca3b598c\",\n    name: \"Assembly X\",\n    cycleTime: 0.5,\n    entryTime: now - 29 * 60 * 1000,\n    timeElapsed: 29 * 60 * 1000,\n    serialNumber: \"342612171\",\n    image: \"https://i.postimg.cc/RVzz4CdX/2R.jpg\",\n    model: \"2R\",\n  },\n  {\n    id: \"60467703c7e7ca6bca3b598c\",\n    name: \"Assembly Y\",\n    cycleTime: 0.5,\n    entryTime: now - 20 * 60 * 1000,\n    timeElapsed: 20 * 60 * 1000,\n    serialNumber: \"342612171\",\n    image: \"https://i.postimg.cc/RVzz4CdX/2R.jpg\",\n    model: \"2R\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { CircularProgress } from \"@mui/material\";\nimport useDashboadApi from \"./api/dashboardApi\";\nimport { EngineCard } from \"../../components\";\nimport { mockData } from \"./api/mockData\";\nimport styles from \"./DashboardScreen.module.css\";\n\nconst DashboardScreen = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const [engineData, setEngineData] = useState([]);\n  const initialiseEngines = useDashboadApi().initialiseEngines;\n  const initialiseWorkStations = useDashboadApi().initialiseWorkStations;\n\n  useEffect(() => {\n    setIsLoading(true);\n    Promise.all([initialiseEngines(), initialiseWorkStations()])\n      .then((value) => {\n        const engines = value[0].data;\n        const workStations = value[1].data;\n        mapEngineData(engines, workStations);\n        setIsLoading(false);\n      })\n      .catch((e) => {\n        setIsError(true);\n        console.warn(`Error fetching data: ${e} `);\n      });\n  }, []);\n\n  // Simple error handling\n  if (isError) {\n    return <div>Error!</div>;\n  }\n\n  const mapEngineData = (engines, workStations) => {\n    // Mapping each engine data\n    let engineMetadata = {};\n    for (const workStation of workStations) {\n      if (workStation.currentProduct !== null) {\n        const found = engines.find((engine) => engine.id == workStation.currentProduct.id);\n        engineMetadata = {\n          id: workStation.currentProduct.id,\n          name: workStation.name,\n          cycleTime: workStation.cycleTimeHrs,\n          entryTime: workStation.currentProduct.entryTime,\n          serialNumber: found.serialNumber,\n          image: found.image,\n          model: found.model,\n        };\n        console.log(engineMetadata);\n        setEngineData((prev) => [...prev, engineMetadata]);\n      } else {\n        engineMetadata = {\n          id: null,\n          name: workStation.name,\n        };\n        setEngineData((prev) => [...prev, engineMetadata]);\n      }\n    }\n\n    // Prepare two fake engine data for demonstrating time elapsed\n    setEngineData((prev) => [...prev, ...mockData]);\n  };\n\n  return (\n    <div>\n      {!isLoading ? (\n        <div className={styles.cardsContainer}>\n          {engineData.map((element, index) => (\n            <EngineCard\n              id={element.id}\n              name={element.name}\n              imageURL={element.image}\n              model={element.model}\n              serialNumber={element.serialNumber}\n              entryTime={element.entryTime}\n              cycleTime={element.cycleTime}\n              key={index}\n            />\n          ))}\n        </div>\n      ) : (\n        <div className={styles.progressContainer}>\n          <CircularProgress />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default DashboardScreen;\n","import React from \"react\";\nimport { TopBar } from \"./components\";\nimport { DashboardScreen } from \"./pages/DashboardScreen\";\n\nconst App = () => {\n  return (\n    <div>\n      <TopBar>\n        <DashboardScreen />\n      </TopBar>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"EngineCard_card__1Mmrr\",\"cardContainer\":\"EngineCard_cardContainer__2Bun3\",\"cardTitle\":\"EngineCard_cardTitle__3neta\",\"cardContent\":\"EngineCard_cardContent__3ONX0\",\"noProductCardContent\":\"EngineCard_noProductCardContent__3tkwW\",\"imageContainer\":\"EngineCard_imageContainer__3e4ne\",\"engineInfo\":\"EngineCard_engineInfo__3ByJu\",\"engineInfoRow\":\"EngineCard_engineInfoRow__2mA1K\",\"infoTitle\":\"EngineCard_infoTitle__3a3Bx\",\"infoContent\":\"EngineCard_infoContent__uNlGl\",\"elapsedContainer\":\"EngineCard_elapsedContainer__398tc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"warning\":\"ProgressBar_warning__1n3zq\",\"critical\":\"ProgressBar_critical__2q2IM\",\"elapsedContainer\":\"ProgressBar_elapsedContainer___wu7_\",\"infoTitle\":\"ProgressBar_infoTitle__1T2b6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"topBar\":\"TopBar_topBar__2dvWf\",\"root\":\"TopBar_root__35h8J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"progressContainer\":\"DashboardScreen_progressContainer__1YojO\",\"cardsContainer\":\"DashboardScreen_cardsContainer__3Od-d\"};"],"sourceRoot":""}